import { AdminCustomerGroupsDeleteRes, AdminCustomerGroupsRes, AdminDeleteCustomerGroupsGroupCustomerBatchReq, AdminPostCustomerGroupsGroupCustomersBatchReq, AdminPostCustomerGroupsGroupReq, AdminPostCustomerGroupsReq } from "@medusajs/medusa";
import { UseMutationOptions } from "react-query";
import { Response } from "@medusajs/medusa-js";
/**
 * Hook returns functions for creating customer groups.
 *
 * @param options
 */
export declare const useAdminCreateCustomerGroup: (options?: UseMutationOptions<Response<AdminCustomerGroupsRes>, Error, AdminPostCustomerGroupsReq>) => import("react-query").UseMutationResult<Response<AdminCustomerGroupsRes>, Error, AdminPostCustomerGroupsReq, unknown>;
/**
 * Hook return functions for updating a customer group.
 *
 * @param id - id of the customer group that is being updated
 * @param options
 */
export declare const useAdminUpdateCustomerGroup: (id: string, options?: UseMutationOptions<Response<AdminCustomerGroupsRes>, Error, AdminPostCustomerGroupsGroupReq>) => import("react-query").UseMutationResult<Response<AdminCustomerGroupsRes>, Error, AdminPostCustomerGroupsGroupReq, unknown>;
/**
 * Hook return functions for deleting a customer group.
 *
 * @param id - id of the customer group that is being deleted
 * @param options
 */
export declare const useAdminDeleteCustomerGroup: (id: string, options?: UseMutationOptions<Response<AdminCustomerGroupsDeleteRes>, Error, void>) => import("react-query").UseMutationResult<Response<import("@medusajs/medusa/dist/types/common").DeleteResponse>, Error, void, unknown>;
/**
 * Hook returns functions for addition of multiple customers to a customer group.
 *
 * @param id - id of the customer group in which customers are being added
 * @param options
 */
export declare const useAdminAddCustomersToCustomerGroup: (id: string, options?: UseMutationOptions<Response<AdminCustomerGroupsRes>, Error, AdminPostCustomerGroupsGroupCustomersBatchReq>) => import("react-query").UseMutationResult<Response<AdminCustomerGroupsRes>, Error, AdminPostCustomerGroupsGroupCustomersBatchReq, unknown>;
/**
 * Hook returns function for removal of multiple customers from a customer group.
 *
 * @param id - id of a group from which customers will be removed
 * @param options
 */
export declare const useAdminRemoveCustomersFromCustomerGroup: (id: string, options?: UseMutationOptions<Response<AdminCustomerGroupsRes>, Error, AdminDeleteCustomerGroupsGroupCustomerBatchReq>) => import("react-query").UseMutationResult<Response<AdminCustomerGroupsRes>, Error, AdminDeleteCustomerGroupsGroupCustomerBatchReq, unknown>;
