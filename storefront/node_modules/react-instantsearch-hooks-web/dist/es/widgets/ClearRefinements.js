import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["includedAttributes", "excludedAttributes", "transformItems"];
import React from 'react';
import { useClearRefinements } from 'react-instantsearch-hooks';
import { ClearRefinements as ClearRefinementsUiComponent } from "../ui/ClearRefinements.js";
export function ClearRefinements(_ref) {
  var includedAttributes = _ref.includedAttributes,
      excludedAttributes = _ref.excludedAttributes,
      transformItems = _ref.transformItems,
      props = _objectWithoutProperties(_ref, _excluded);

  var _useClearRefinements = useClearRefinements({
    includedAttributes: includedAttributes,
    excludedAttributes: excludedAttributes,
    transformItems: transformItems
  }, {
    $$widgetType: 'ais.clearRefinements'
  }),
      canRefine = _useClearRefinements.canRefine,
      refine = _useClearRefinements.refine;

  var uiProps = {
    onClick: refine,
    disabled: !canRefine,
    translations: {
      resetLabel: 'Clear refinements'
    }
  };
  return /*#__PURE__*/React.createElement(ClearRefinementsUiComponent, _extends({}, props, uiProps));
}