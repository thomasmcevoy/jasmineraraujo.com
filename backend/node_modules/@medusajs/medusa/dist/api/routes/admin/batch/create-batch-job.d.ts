import { BatchJob } from "../../../../models";
/**
 * @oas [post] /batch-jobs
 * operationId: "PostBatchJobs"
 * summary: "Create a Batch Job"
 * description: "Creates a Batch Job."
 * x-authenticated: true
 * requestBody:
 *   content:
 *    application/json:
 *      schema:
 *        required:
 *          - type
 *          - context
 *        properties:
 *          type:
 *            type: string
 *            description: The type of batch job to start.
 *            example: product-export
 *          context:
 *            type: object
 *            description: Additional infomration regarding the batch to be used for processing.
 *            example:
 *              shape:
 *                prices:
 *                  - region: null
 *                    currency_code: "eur"
 *                dynamicImageColumnCount: 4
 *                dynamicOptionColumnCount: 2
 *              list_config:
 *                skip: 0
 *                take: 50
 *                order:
 *                  created_at: "DESC"
 *                relations:
 *                  - variants
 *                  - variant.prices
 *                  - images
 *          dry_run:
 *            type: boolean
 *            description: Set a batch job in dry_run mode to get some information on what will be done without applying any modifications.
 *            default: false
 * tags:
 *   - Batch Job
 * responses:
 *   201:
 *     description: OK
 *     content:
 *       application/json:
 *         schema:
 *           properties:
 *            batch_job:
 *              $ref: "#/components/schemas/batch_job"
 */
declare const _default: (req: any, res: any) => Promise<void>;
export default _default;
export declare class AdminPostBatchesReq {
    type: string;
    context: BatchJob["context"];
    dry_run: boolean;
}
