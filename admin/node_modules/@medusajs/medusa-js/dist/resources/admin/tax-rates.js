"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var qs_1 = __importDefault(require("qs"));
var base_1 = __importDefault(require("../base"));
var AdminTaxRatesResource = /** @class */ (function (_super) {
    __extends(AdminTaxRatesResource, _super);
    function AdminTaxRatesResource() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AdminTaxRatesResource.prototype.retrieve = function (id, query, customHeaders) {
        if (customHeaders === void 0) { customHeaders = {}; }
        var path = "/admin/tax-rates/".concat(id);
        if (query) {
            var queryString = qs_1.default.stringify(query);
            path = "/admin/tax-rates/".concat(id, "?").concat(queryString);
        }
        return this.client.request("GET", path, undefined, {}, customHeaders);
    };
    AdminTaxRatesResource.prototype.list = function (query, customHeaders) {
        if (customHeaders === void 0) { customHeaders = {}; }
        var path = "/admin/tax-rates";
        if (query) {
            var queryString = qs_1.default.stringify(query);
            path = "/admin/tax-rates?".concat(queryString);
        }
        return this.client.request("GET", path, undefined, {}, customHeaders);
    };
    AdminTaxRatesResource.prototype.create = function (payload, query, customHeaders) {
        if (customHeaders === void 0) { customHeaders = {}; }
        var path = "/admin/tax-rates";
        if (query) {
            var queryString = qs_1.default.stringify(query);
            path = "/admin/tax-rates?".concat(queryString);
        }
        return this.client.request("POST", path, payload, {}, customHeaders);
    };
    AdminTaxRatesResource.prototype.update = function (id, payload, query, customHeaders) {
        if (customHeaders === void 0) { customHeaders = {}; }
        var path = "/admin/tax-rates/".concat(id);
        if (query) {
            var queryString = qs_1.default.stringify(query);
            path = "/admin/tax-rates/".concat(id, "?").concat(queryString);
        }
        return this.client.request("POST", path, payload, {}, customHeaders);
    };
    AdminTaxRatesResource.prototype.addProducts = function (id, payload, query, customHeaders) {
        if (customHeaders === void 0) { customHeaders = {}; }
        var path = "/admin/tax-rates/".concat(id, "/products/batch");
        if (query) {
            var queryString = qs_1.default.stringify(query);
            path = "/admin/tax-rates/".concat(id, "/products/batch?").concat(queryString);
        }
        return this.client.request("POST", path, payload, {}, customHeaders);
    };
    AdminTaxRatesResource.prototype.addProductTypes = function (id, payload, query, customHeaders) {
        if (customHeaders === void 0) { customHeaders = {}; }
        var path = "/admin/tax-rates/".concat(id, "/product-types/batch");
        if (query) {
            var queryString = qs_1.default.stringify(query);
            path = "/admin/tax-rates/".concat(id, "/product-types/batch?").concat(queryString);
        }
        return this.client.request("POST", path, payload, {}, customHeaders);
    };
    AdminTaxRatesResource.prototype.addShippingOptions = function (id, payload, query, customHeaders) {
        if (customHeaders === void 0) { customHeaders = {}; }
        var path = "/admin/tax-rates/".concat(id, "/shipping-options/batch");
        if (query) {
            var queryString = qs_1.default.stringify(query);
            path = "/admin/tax-rates/".concat(id, "/shipping-options/batch?").concat(queryString);
        }
        return this.client.request("POST", path, payload, {}, customHeaders);
    };
    AdminTaxRatesResource.prototype.removeProducts = function (id, payload, query, customHeaders) {
        if (customHeaders === void 0) { customHeaders = {}; }
        var path = "/admin/tax-rates/".concat(id, "/products/batch");
        if (query) {
            var queryString = qs_1.default.stringify(query);
            path = "/admin/tax-rates/".concat(id, "/products/batch?").concat(queryString);
        }
        return this.client.request("DELETE", path, payload, {}, customHeaders);
    };
    AdminTaxRatesResource.prototype.removeProductTypes = function (id, payload, query, customHeaders) {
        if (customHeaders === void 0) { customHeaders = {}; }
        var path = "/admin/tax-rates/".concat(id, "/product-types/batch");
        if (query) {
            var queryString = qs_1.default.stringify(query);
            path = "/admin/tax-rates/".concat(id, "/product-types/batch?").concat(queryString);
        }
        return this.client.request("DELETE", path, payload, {}, customHeaders);
    };
    AdminTaxRatesResource.prototype.removeShippingOptions = function (id, payload, query, customHeaders) {
        if (customHeaders === void 0) { customHeaders = {}; }
        var path = "/admin/tax-rates/".concat(id, "/shipping-options/batch");
        if (query) {
            var queryString = qs_1.default.stringify(query);
            path = "/admin/tax-rates/".concat(id, "/shipping-options/batch?").concat(queryString);
        }
        return this.client.request("DELETE", path, payload, {}, customHeaders);
    };
    AdminTaxRatesResource.prototype.delete = function (id, customHeaders) {
        if (customHeaders === void 0) { customHeaders = {}; }
        var path = "/admin/tax-rates/".concat(id);
        return this.client.request("DELETE", path, undefined, {}, customHeaders);
    };
    return AdminTaxRatesResource;
}(base_1.default));
exports.default = AdminTaxRatesResource;
//# sourceMappingURL=tax-rates.js.map