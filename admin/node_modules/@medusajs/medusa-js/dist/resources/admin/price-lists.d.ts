import { AdminPostPriceListPricesPricesReq, AdminPostPriceListsPriceListPriceListReq, AdminPostPriceListsPriceListReq, AdminPriceListDeleteRes, AdminPriceListRes, AdminGetPriceListPaginationParams, AdminPriceListsListRes, AdminDeletePriceListPricesPricesReq, AdminPriceListDeleteBatchRes, AdminGetPriceListsPriceListProductsParams } from "@medusajs/medusa";
import { ResponsePromise } from "../../typings";
import BaseResource from "../base";
declare class AdminPriceListResource extends BaseResource {
    create(payload: AdminPostPriceListsPriceListReq, customHeaders?: Record<string, any>): ResponsePromise<AdminPriceListRes>;
    update(id: string, payload: AdminPostPriceListsPriceListPriceListReq, customHeaders?: Record<string, any>): ResponsePromise<AdminPriceListRes>;
    delete(id: string, customHeaders?: Record<string, any>): ResponsePromise<AdminPriceListDeleteRes>;
    retrieve(id: string, customHeaders?: Record<string, any>): ResponsePromise<AdminPriceListRes>;
    list(query?: AdminGetPriceListPaginationParams, customHeaders?: Record<string, any>): ResponsePromise<AdminPriceListsListRes>;
    listProducts(id: string, query?: AdminGetPriceListsPriceListProductsParams, customHeaders?: Record<string, any>): ResponsePromise<any>;
    addPrices(id: string, payload: AdminPostPriceListPricesPricesReq, customHeaders?: Record<string, any>): ResponsePromise<AdminPriceListRes>;
    deletePrices(id: string, payload: AdminDeletePriceListPricesPricesReq, customHeaders?: Record<string, any>): ResponsePromise<AdminPriceListDeleteBatchRes>;
    deleteProductPrices(priceListId: string, productId: string, customHeaders?: Record<string, any>): ResponsePromise<AdminPriceListDeleteBatchRes>;
    deleteVariantPrices(priceListId: string, variantId: string, customHeaders?: Record<string, any>): ResponsePromise<AdminPriceListDeleteBatchRes>;
}
export default AdminPriceListResource;
