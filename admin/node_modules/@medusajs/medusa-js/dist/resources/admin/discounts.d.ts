import { AdminDiscountConditionsRes, AdminDiscountsDeleteRes, AdminDiscountsListRes, AdminDiscountsRes, AdminGetDiscountsDiscountConditionsConditionParams, AdminGetDiscountsParams, AdminPostDiscountsDiscountConditions, AdminPostDiscountsDiscountConditionsCondition, AdminPostDiscountsDiscountConditionsConditionParams, AdminPostDiscountsDiscountConditionsParams, AdminPostDiscountsDiscountDynamicCodesReq, AdminPostDiscountsDiscountReq, AdminPostDiscountsReq } from "@medusajs/medusa";
import { ResponsePromise } from "../../typings";
import BaseResource from "../base";
declare class AdminDiscountsResource extends BaseResource {
    /**
     * @description Adds region to discount
     */
    addRegion(id: string, regionId: string, customHeaders?: Record<string, any>): ResponsePromise<AdminDiscountsRes>;
    /**
     * @description Creates discounts
     */
    create(payload: AdminPostDiscountsReq, customHeaders?: Record<string, any>): ResponsePromise<AdminDiscountsRes>;
    /**
     * @description Updates discount
     */
    update(id: string, payload: AdminPostDiscountsDiscountReq, customHeaders?: Record<string, any>): ResponsePromise<AdminDiscountsRes>;
    /**
     * @description Creates a dynamic discount code
     */
    createDynamicCode(id: string, payload: AdminPostDiscountsDiscountDynamicCodesReq, customHeaders?: Record<string, any>): ResponsePromise<AdminDiscountsRes>;
    /**
     * @description Deletes a discount
     */
    delete(id: string, customHeaders?: Record<string, any>): ResponsePromise<AdminDiscountsDeleteRes>;
    /**
     * @description Deletes a dynamic discount
     */
    deleteDynamicCode(id: string, code: string, customHeaders?: Record<string, any>): ResponsePromise<AdminDiscountsRes>;
    /**
     * @description Retrieves a discount
     */
    retrieve(id: string, customHeaders?: Record<string, any>): ResponsePromise<AdminDiscountsRes>;
    /**
     * @description Retrieves a discount by code
     */
    retrieveByCode(code: string, customHeaders?: Record<string, any>): ResponsePromise<AdminDiscountsRes>;
    /**
     * @description Lists discounts
     */
    list(query?: AdminGetDiscountsParams, customHeaders?: Record<string, any>): ResponsePromise<AdminDiscountsListRes>;
    /**
     * @description Removes a region from a discount
     */
    removeRegion(id: string, regionId: string, customHeaders?: Record<string, any>): ResponsePromise<AdminDiscountsRes>;
    /**
     * @description creates a discount condition
     */
    createCondition(discountId: string, payload: AdminPostDiscountsDiscountConditions, query?: AdminPostDiscountsDiscountConditionsParams, customHeaders?: Record<string, any>): ResponsePromise<AdminDiscountsRes>;
    /**
     * @description Updates a discount condition
     */
    updateCondition(discountId: string, conditionId: string, payload: AdminPostDiscountsDiscountConditionsCondition, query?: AdminPostDiscountsDiscountConditionsConditionParams, customHeaders?: Record<string, any>): ResponsePromise<AdminDiscountsRes>;
    /**
     * @description Removes a condition from a discount
     */
    deleteCondition(discountId: string, conditionId: string, customHeaders?: Record<string, any>): ResponsePromise<AdminDiscountsDeleteRes>;
    /**
     * @description Gets a condition from a discount
     */
    getCondition(discountId: string, conditionId: string, query?: AdminGetDiscountsDiscountConditionsConditionParams, customHeaders?: Record<string, any>): ResponsePromise<AdminDiscountConditionsRes>;
}
export default AdminDiscountsResource;
