import { AdminDeleteUserRes, AdminResetPasswordRequest, AdminResetPasswordTokenRequest, AdminUserRes } from "@medusajs/medusa";
import { AdminCreateUserPayload, AdminUpdateUserPayload, Response } from "@medusajs/medusa-js";
import { UseMutationOptions } from "react-query";
export declare const useAdminCreateUser: (options?: UseMutationOptions<Response<AdminUserRes>, Error, AdminCreateUserPayload>) => import("react-query").UseMutationResult<Response<AdminUserRes>, Error, AdminCreateUserPayload, unknown>;
export declare const useAdminUpdateUser: (id: string, options?: UseMutationOptions<Response<AdminUserRes>, Error, AdminUpdateUserPayload>) => import("react-query").UseMutationResult<Response<AdminUserRes>, Error, AdminUpdateUserPayload, unknown>;
export declare const useAdminDeleteUser: (id: string, options?: UseMutationOptions<Response<AdminDeleteUserRes>, Error, void>) => import("react-query").UseMutationResult<Response<import("@medusajs/medusa/dist/types/common").DeleteResponse>, Error, void, unknown>;
export declare const useAdminResetPassword: (options?: UseMutationOptions<Response<AdminUserRes>, Error, AdminResetPasswordRequest>) => import("react-query").UseMutationResult<Response<AdminUserRes>, Error, AdminResetPasswordRequest, unknown>;
export declare const useAdminSendResetPasswordToken: (options?: UseMutationOptions<Response<void>, Error, AdminResetPasswordTokenRequest>) => import("react-query").UseMutationResult<Response<void>, Error, AdminResetPasswordTokenRequest, unknown>;
