import { AdminPostSalesChannelsReq, AdminSalesChannelsRes, AdminPostSalesChannelsSalesChannelReq, AdminSalesChannelsDeleteRes, AdminDeleteSalesChannelsChannelProductsBatchReq, AdminPostSalesChannelsChannelProductsBatchReq } from "@medusajs/medusa";
import { Response } from "@medusajs/medusa-js";
import { UseMutationOptions } from "react-query";
/**
 * Hook provides a mutation function for creating sales channel.
 *
 * @experimental This feature is under development and may change in the future.
 * To use this feature please enable the corresponding feature flag in your medusa backend project.
 */
export declare const useAdminCreateSalesChannel: (options?: UseMutationOptions<Response<AdminSalesChannelsRes>, Error, AdminPostSalesChannelsReq>) => import("react-query").UseMutationResult<Response<AdminSalesChannelsRes>, Error, AdminPostSalesChannelsReq, unknown>;
/** update a sales channel
 * @experimental This feature is under development and may change in the future.
 * To use this feature please enable feature flag `sales_channels` in your medusa backend project.
 * @description updates a sales channel
 * @returns the updated medusa sales channel
 */
export declare const useAdminUpdateSalesChannel: (id: string, options?: UseMutationOptions<Response<AdminSalesChannelsRes>, Error, AdminPostSalesChannelsSalesChannelReq>) => import("react-query").UseMutationResult<Response<AdminSalesChannelsRes>, Error, AdminPostSalesChannelsSalesChannelReq, unknown>;
/**
 * Delete a sales channel
 * @experimental This feature is under development and may change in the future.
 * To use this feature please enable featureflag `sales_channels` in your medusa backend project.
 * @param id
 * @param options
 */
export declare const useAdminDeleteSalesChannel: (id: string, options?: UseMutationOptions<Response<AdminSalesChannelsDeleteRes>, Error, void>) => import("react-query").UseMutationResult<Response<import("@medusajs/medusa/dist/types/common").DeleteResponse>, Error, void, unknown>;
/**
 * Remove products from a sales channel
 * @experimental This feature is under development and may change in the future.
 * To use this feature please enable featureflag `sales_channels` in your medusa backend project.
 * @description remove products from a sales channel
 * @param id
 * @param options
 */
export declare const useAdminDeleteProductsFromSalesChannel: (id: string, options?: UseMutationOptions<Response<AdminSalesChannelsRes>, Error, AdminDeleteSalesChannelsChannelProductsBatchReq>) => import("react-query").UseMutationResult<Response<AdminSalesChannelsRes>, Error, AdminDeleteSalesChannelsChannelProductsBatchReq, unknown>;
/**
 * Add products to a sales channel
 * @experimental This feature is under development and may change in the future.
 * To use this feature please enable featureflag `sales_channels` in your medusa backend project.
 * @description Add products to a sales channel
 * @param id
 * @param options
 */
export declare const useAdminAddProductsToSalesChannel: (id: string, options?: UseMutationOptions<Response<AdminSalesChannelsRes>, Error, AdminPostSalesChannelsChannelProductsBatchReq>) => import("react-query").UseMutationResult<Response<AdminSalesChannelsRes>, Error, AdminPostSalesChannelsChannelProductsBatchReq, unknown>;
